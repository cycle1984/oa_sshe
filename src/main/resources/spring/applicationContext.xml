<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">    
  
		
	<!-- 加载jdbc.property,hibenrate.properties -->		
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:setting/jdbc.properties</value>
                <value>classpath:setting/hibernate.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- dataSource -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		
		<!--加载数据库驱动 -->
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		
		<!-- 数据库url -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		
		<!-- 数据库账号密码 -->
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
		<property name="initialPoolSize" value="5"></property>
		
		<!-- 连接池中保留的最小连接数，默认为：3-->  
		<property name="minPoolSize" value="5"></property>
		
		 <!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="100"></property>
		
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->  
		<property name="checkoutTimeout" value="5000"></property>
		
		<!--最大空闲时间，xx秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
		<property name="maxIdleTime" value="1800"></property>
		
		<!--每xx秒检查所有连接池中的空闲连接。默认值: 0，不检查 --> 
		<property name="idleConnectionTestPeriod" value="3000"></property>
		
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
		<property name="acquireIncrement" value="5"></property>
	</bean>

		
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"></property>
    	<!-- 使用spring配置，自动扫描转载指定目录下的hbm.xml文件 -->
    	<property name="mappingLocations" value="classpath:cycle/oa_sshe/domain/*.hbm.xml"></property>
        <property name="packagesToScan">
            <list>
            	<!-- 搜索包下的注解，产生映射 -->
                <value>cycle.oa_sshe.domain</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                            
            	<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.net.sf.ehcache.configurationResourceName">${hibernate.net.sf.ehcache.configurationResourceName}</prop>
                
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>
    </bean>	
	
	<!-- hibernate4的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 事务通知 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="do*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 在切点表达式中||代表或者 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* cycle.oa_sshe.dao.*.*(..))" id="securityMethods"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="securityMethods"/>
	</aop:config>
	
	<!-- 登录日志aop -->
	<bean id="loginLogAop" class="cycle.oa_sshe.aop.LoginLogAop"></bean>
	<aop:config>
		<aop:pointcut expression="execution(* cycle.oa_sshe.action.UserAction.login(..))" id="loginLogMethod"/>
		<aop:aspect ref="loginLogAop">
			<aop:after method="log" pointcut-ref="loginLogMethod"/>
		</aop:aspect>		
	</aop:config>
	
	<!-- 注解搜索路径 -->
	<context:component-scan base-package="cycle.oa_sshe"></context:component-scan>
	<!-- 支持注解依赖注入，可以不要 -->
	<context:annotation-config></context:annotation-config>
	<!-- 支持注解的事务，用于测试 -->
	<tx:annotation-driven/>
	<!-- 支持注解的aop功能 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 整合activiti
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
	 	<property name="dataSource" ref="dataSource" />
	 	<property name="transactionManager" ref="transactionManager" />
	 	<property name="databaseSchemaUpdate" value="true" />
	 	<property name="jobExecutorActivate" value="true" />
		<property name="history" value="full" />
		 	  	 -->
		<!-- 生成流程图的字体
		<property name="activityFontName" value="宋体"/>
		<property name="labelFontName" value="宋体"/>
 	</bean> -->
 	
 	<!-- activiti流程引擎 
 	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
  		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
  	</bean>-->
  
  	<!-- activiti各service
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />	 -->
	
</beans>